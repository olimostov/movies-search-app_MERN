{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nconst apiEndPoint = process.env.REACT_APP_TOP250_END_POINT;\nconst apiKey = process.env.REACT_APP_API_KEY;\nexport const useTop250 = () => {\n  _s();\n\n  const [top250, setTop250] = useState(null);\n  useEffect(() => {\n    fetch(apiEndPoint).then(res => {\n      return res.json();\n    }).then(data => {\n      console.log('Top250 data :>> ', data);\n      return data.results;\n    }).then(data => {\n      return new Promise(async resolve => {\n        for (let i = 0; i < data.length; i++) {\n          const oneMovie = data[i];\n          const movieDataApiResult = await fetch(`https://api.themoviedb.org/3/movie/${oneMovie.id}?api_key=${apiKey}&language=en-US`);\n          const movieData = await movieDataApiResult.json();\n          oneMovie.movieData = movieData;\n        }\n\n        resolve(data);\n      });\n    }).then(data => {\n      setTop250(data);\n      console.log('top250 :>> ', top250);\n    });\n  }, []);\n  const isLoading = top250 === null;\n  return {\n    isLoading,\n    movies: top250 === undefined || top250 === null ? [] : top250\n  };\n};\n\n_s(useTop250, \"LKVmf/LZap2gobJUEd46HQeSCsE=\");","map":{"version":3,"sources":["/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/hooks/useTop250.js"],"names":["useState","useEffect","apiEndPoint","process","env","REACT_APP_TOP250_END_POINT","apiKey","REACT_APP_API_KEY","useTop250","top250","setTop250","fetch","then","res","json","data","console","log","results","Promise","resolve","i","length","oneMovie","movieDataApiResult","id","movieData","isLoading","movies","undefined"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYC,0BAAhC;AACA,MAAMC,MAAM,GAAGH,OAAO,CAACC,GAAR,CAAYG,iBAA3B;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAACT,WAAD,CAAL,CACGU,IADH,CACQC,GAAG,IAAI;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,KAHH,EAIGF,IAJH,CAIQG,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,IAAhC;AACA,aAAOA,IAAI,CAACG,OAAZ;AACD,KAPH,EAQGN,IARH,CAQQG,IAAI,IAAI;AACZ,aAAO,IAAII,OAAJ,CAAY,MAAMC,OAAN,IAAiB;AAClC,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAAI,CAACO,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,gBAAME,QAAQ,GAAGR,IAAI,CAACM,CAAD,CAArB;AACA,gBAAMG,kBAAkB,GAAG,MAAMb,KAAK,CACnC,sCAAqCY,QAAQ,CAACE,EAAG,YAAWnB,MAAO,iBADhC,CAAtC;AAGA,gBAAMoB,SAAS,GAAG,MAAMF,kBAAkB,CAACV,IAAnB,EAAxB;AACAS,UAAAA,QAAQ,CAACG,SAAT,GAAqBA,SAArB;AACD;;AACDN,QAAAA,OAAO,CAACL,IAAD,CAAP;AACD,OAVM,CAAP;AAWD,KApBH,EAqBGH,IArBH,CAqBQG,IAAI,IAAI;AACZL,MAAAA,SAAS,CAACK,IAAD,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BR,MAA3B;AACD,KAxBH;AAyBD,GA1BQ,EA0BN,EA1BM,CAAT;AA4BA,QAAMkB,SAAS,GAAGlB,MAAM,KAAK,IAA7B;AACA,SAAO;AACLkB,IAAAA,SADK;AAELC,IAAAA,MAAM,EAAEnB,MAAM,KAAKoB,SAAX,IAAwBpB,MAAM,KAAK,IAAnC,GAA0C,EAA1C,GAA+CA;AAFlD,GAAP;AAID,CAnCM;;GAAMD,S","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst apiEndPoint = process.env.REACT_APP_TOP250_END_POINT;\nconst apiKey = process.env.REACT_APP_API_KEY;\nexport const useTop250 = () => {\n  const [top250, setTop250] = useState(null);\n  useEffect(() => {\n    fetch(apiEndPoint)\n      .then(res => {\n        return res.json();\n      })\n      .then(data => {\n        console.log('Top250 data :>> ', data);\n        return data.results;\n      })\n      .then(data => {\n        return new Promise(async resolve => {\n          for (let i = 0; i < data.length; i++) {\n            const oneMovie = data[i];\n            const movieDataApiResult = await fetch(\n              `https://api.themoviedb.org/3/movie/${oneMovie.id}?api_key=${apiKey}&language=en-US`\n            );\n            const movieData = await movieDataApiResult.json();\n            oneMovie.movieData = movieData;\n          }\n          resolve(data);\n        });\n      })\n      .then(data => {\n        setTop250(data);\n        console.log('top250 :>> ', top250);\n      });\n  }, []);\n\n  const isLoading = top250 === null;\n  return {\n    isLoading,\n    movies: top250 === undefined || top250 === null ? [] : top250\n  };\n};\n"]},"metadata":{},"sourceType":"module"}