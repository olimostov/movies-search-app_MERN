{"ast":null,"code":"var _jsxFileName = \"/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport MoviesContainer from './MoviesContainer';\nimport SearchBox from './SearchBox';\nimport { useMovies } from '../hooks/useMovies';\nimport M from 'materialize-css'; // initializing materialize autofill input\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst autoInput = M.Autocomplete.init();\n\nconst Home = () => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const {\n    isLoading,\n    movies\n  } = useMovies(searchTerm);\n  const [inputOptions, setInputOptions] = useState(null); // building input options object\n\n  function getInputOptions(movies) {\n    let options = {};\n    movies.map(movie => {\n      return options[`${movie.movieData.original_title}`] = null;\n    });\n    console.log('options :>> ', options);\n    return options;\n  }\n\n  const onSearchInputChange = input => {\n    setSearchTerm(input); // getInputOptions(movies);\n  }; // displaying options\n\n\n  autoInput.updateData(getInputOptions(movies)); // M.Autocomplete.updateData();\n\n  let moviesDom;\n\n  if (isLoading) {\n    moviesDom = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this);\n  } else {\n    moviesDom = /*#__PURE__*/_jsxDEV(MoviesContainer, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n      searchTerm: searchTerm,\n      onSearchInputChange: onSearchInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), moviesDom]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"2KAwvHJiZjJBsngy08ijatLqCGc=\", false, function () {\n  return [useMovies];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/Home.js"],"names":["useEffect","useState","MoviesContainer","SearchBox","useMovies","M","autoInput","Autocomplete","init","Home","searchTerm","setSearchTerm","isLoading","movies","inputOptions","setInputOptions","getInputOptions","options","map","movie","movieData","original_title","console","log","onSearchInputChange","input","updateData","moviesDom"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,CAAP,MAAc,iBAAd,C,CAEA;;;AACA,MAAMC,SAAS,GAAGD,CAAC,CAACE,YAAF,CAAeC,IAAf,EAAlB;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM;AAAEW,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAwBT,SAAS,CAACM,UAAD,CAAvC;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,IAAD,CAAhD,CAJiB,CAMjB;;AACA,WAASe,eAAT,CAAyBH,MAAzB,EAAiC;AAC/B,QAAII,OAAO,GAAG,EAAd;AACAJ,IAAAA,MAAM,CAACK,GAAP,CAAWC,KAAK,IAAI;AAClB,aAAQF,OAAO,CAAE,GAAEE,KAAK,CAACC,SAAN,CAAgBC,cAAe,EAAnC,CAAP,GAA+C,IAAvD;AACD,KAFD;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BN,OAA5B;AACA,WAAOA,OAAP;AACD;;AAED,QAAMO,mBAAmB,GAAGC,KAAK,IAAI;AACnCd,IAAAA,aAAa,CAACc,KAAD,CAAb,CADmC,CAEnC;AACD,GAHD,CAhBiB,CAqBjB;;;AACAnB,EAAAA,SAAS,CAACoB,UAAV,CAAqBV,eAAe,CAACH,MAAD,CAApC,EAtBiB,CAuBjB;;AAEA,MAAIc,SAAJ;;AACA,MAAIf,SAAJ,EAAe;AACbe,IAAAA,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ;AACD,GAFD,MAEO;AACLA,IAAAA,SAAS,gBAAG,QAAC,eAAD;AAAiB,MAAA,MAAM,EAAEd;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAZ;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,UAAU,EAAEH,UADd;AAEE,MAAA,mBAAmB,EAAEc;AAFvB;AAAA;AAAA;AAAA;AAAA,YADF,EAMGG,SANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA1CD;;GAAMlB,I;UAG0BL,S;;;KAH1BK,I;AA4CN,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport MoviesContainer from './MoviesContainer';\nimport SearchBox from './SearchBox';\nimport { useMovies } from '../hooks/useMovies';\nimport M from 'materialize-css';\n\n// initializing materialize autofill input\nconst autoInput = M.Autocomplete.init();\nconst Home = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const { isLoading, movies } = useMovies(searchTerm);\n  const [inputOptions, setInputOptions] = useState(null);\n\n  // building input options object\n  function getInputOptions(movies) {\n    let options = {};\n    movies.map(movie => {\n      return (options[`${movie.movieData.original_title}`] = null);\n    });\n    console.log('options :>> ', options);\n    return options;\n  }\n\n  const onSearchInputChange = input => {\n    setSearchTerm(input);\n    // getInputOptions(movies);\n  };\n\n  // displaying options\n  autoInput.updateData(getInputOptions(movies));\n  // M.Autocomplete.updateData();\n\n  let moviesDom;\n  if (isLoading) {\n    moviesDom = <div>Loading...</div>;\n  } else {\n    moviesDom = <MoviesContainer movies={movies} />;\n  }\n\n  return (\n    <div>\n      <SearchBox\n        searchTerm={searchTerm}\n        onSearchInputChange={onSearchInputChange}\n      />\n      {/* <MoviesContainer movies={searchOutput} /> */}\n      {moviesDom}\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}