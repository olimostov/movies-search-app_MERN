{"ast":null,"code":"var _jsxFileName = \"/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport MoviesContainer from './MoviesContainer';\nimport SearchBox from './SearchBox';\nimport { useMovies } from '../hooks/useMovies'; // import M from 'materialize-css';\n\nimport M from 'materialize-css/dist/js/materialize.min.js'; // initializing materialize autofill input\n// const autoInput = M.Autocomplete.init();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nconst Home = () => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const {\n    isLoading,\n    movies\n  } = useMovies(searchTerm);\n  const [inputOptions, setInputOptions] = useState(null);\n  M.Autocomplete.init({\n    SearchBox\n  }, {\n    data: inputOptions\n  }); // building input options object\n\n  useEffect(() => {\n    searchTerm && fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${searchTerm}&include_adult=false`).then(res => {\n      return res.json();\n    }).then(data => {\n      console.log('data :>> ', data.results);\n      let options = {};\n      data.results.map(movie => {\n        return options[`${movie.original_title}`] = null;\n      });\n      console.log('options :>> ', options);\n      setInputOptions(options);\n      return options;\n    });\n  }, [searchTerm]);\n\n  const onSearchInputChange = input => {\n    setSearchTerm(input); // getInputOptions(movies);\n  }; // displaying options\n  // autoInput.updateData(getInputOptions(movies));\n\n\n  let moviesDom;\n\n  if (isLoading) {\n    moviesDom = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this);\n  } else {\n    moviesDom = /*#__PURE__*/_jsxDEV(MoviesContainer, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n      searchTerm: searchTerm,\n      onSearchInputChange: onSearchInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), moviesDom]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"JOhQAhxz9ZBYzXVG7lpns9Hh3PQ=\", false, function () {\n  return [useMovies];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/Home.js"],"names":["useEffect","useState","MoviesContainer","SearchBox","useMovies","M","apiKey","process","env","REACT_APP_API_KEY","Home","searchTerm","setSearchTerm","isLoading","movies","inputOptions","setInputOptions","Autocomplete","init","data","fetch","then","res","json","console","log","results","options","map","movie","original_title","onSearchInputChange","input","moviesDom"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,oBAA1B,C,CAEA;;AACA,OAAOC,CAAP,MAAc,4CAAd,C,CAEA;AACA;;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA3B;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM;AAAEY,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAwBV,SAAS,CAACO,UAAD,CAAvC;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,IAAD,CAAhD;AACAI,EAAAA,CAAC,CAACY,YAAF,CAAeC,IAAf,CAAoB;AAAEf,IAAAA;AAAF,GAApB,EAAmC;AAAEgB,IAAAA,IAAI,EAAEJ;AAAR,GAAnC,EALiB,CAOjB;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU,IACRS,KAAK,CACF,qDAAoDd,MAAO,UAASK,UAAW,sBAD7E,CAAL,CAGGU,IAHH,CAGQC,GAAG,IAAI;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,KALH,EAMGF,IANH,CAMQF,IAAI,IAAI;AACZK,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBN,IAAI,CAACO,OAA9B;AACA,UAAIC,OAAO,GAAG,EAAd;AACAR,MAAAA,IAAI,CAACO,OAAL,CAAaE,GAAb,CAAiBC,KAAK,IAAI;AACxB,eAAQF,OAAO,CAAE,GAAEE,KAAK,CAACC,cAAe,EAAzB,CAAP,GAAqC,IAA7C;AACD,OAFD;AAGAN,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BE,OAA5B;AACAX,MAAAA,eAAe,CAACW,OAAD,CAAf;AACA,aAAOA,OAAP;AACD,KAfH,CADF;AAiBD,GAlBQ,EAkBN,CAAChB,UAAD,CAlBM,CAAT;;AAoBA,QAAMoB,mBAAmB,GAAGC,KAAK,IAAI;AACnCpB,IAAAA,aAAa,CAACoB,KAAD,CAAb,CADmC,CAEnC;AACD,GAHD,CA5BiB,CAiCjB;AACA;;;AAEA,MAAIC,SAAJ;;AACA,MAAIpB,SAAJ,EAAe;AACboB,IAAAA,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ;AACD,GAFD,MAEO;AACLA,IAAAA,SAAS,gBAAG,QAAC,eAAD;AAAiB,MAAA,MAAM,EAAEnB;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAZ;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,UAAU,EAAEH,UADd;AAEE,MAAA,mBAAmB,EAAEoB;AAFvB;AAAA;AAAA;AAAA;AAAA,YADF,EAMGE,SANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CArDD;;GAAMvB,I;UAG0BN,S;;;KAH1BM,I;AAuDN,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport MoviesContainer from './MoviesContainer';\nimport SearchBox from './SearchBox';\nimport { useMovies } from '../hooks/useMovies';\n\n// import M from 'materialize-css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\n// initializing materialize autofill input\n// const autoInput = M.Autocomplete.init();\n\nconst apiKey = process.env.REACT_APP_API_KEY;\nconst Home = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const { isLoading, movies } = useMovies(searchTerm);\n  const [inputOptions, setInputOptions] = useState(null);\n  M.Autocomplete.init({ SearchBox }, { data: inputOptions });\n\n  // building input options object\n  useEffect(() => {\n    searchTerm &&\n      fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${searchTerm}&include_adult=false`\n      )\n        .then(res => {\n          return res.json();\n        })\n        .then(data => {\n          console.log('data :>> ', data.results);\n          let options = {};\n          data.results.map(movie => {\n            return (options[`${movie.original_title}`] = null);\n          });\n          console.log('options :>> ', options);\n          setInputOptions(options);\n          return options;\n        });\n  }, [searchTerm]);\n\n  const onSearchInputChange = input => {\n    setSearchTerm(input);\n    // getInputOptions(movies);\n  };\n\n  // displaying options\n  // autoInput.updateData(getInputOptions(movies));\n\n  let moviesDom;\n  if (isLoading) {\n    moviesDom = <div>Loading...</div>;\n  } else {\n    moviesDom = <MoviesContainer movies={movies} />;\n  }\n\n  return (\n    <div>\n      <SearchBox\n        searchTerm={searchTerm}\n        onSearchInputChange={onSearchInputChange}\n      />\n      {/* <MoviesContainer movies={searchOutput} /> */}\n      {moviesDom}\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}