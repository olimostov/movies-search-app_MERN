{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nconst fetchMovieData = async movie => {\n  // console.log('in fetch movie data');\n  const res = await fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=${apiKey}&language=en-US`);\n  const data = await res.json();\n  console.log('data:', data);\n  return data;\n};\n\nexport const useMovies = searchTerm => {\n  _s();\n\n  const [lastSearchTermApiCalled, setLastSearchTermApiCalled] = useState(null);\n  const [apiResults, setApiResults] = useState(null);\n\n  if (searchTerm !== '' && searchTerm !== lastSearchTermApiCalled) {\n    setApiResults(null);\n    setLastSearchTermApiCalled(searchTerm);\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${searchTerm}&include_adult=false`).then(res => {\n      return res.json();\n    }).then(data => {\n      console.log('Home fetch output: ', data); // data.results.()\n\n      console.log('Got movies list from API :>> ', data.results);\n      return data.results;\n    }).then(async data => {\n      for (let i = 0; i < data.length; i++) {\n        const oneMovie = data[i];\n        const movieDataApiResult = await fetch(`https://api.themoviedb.org/3/movie/${oneMovie.id}?api_key=${apiKey}&language=en-US`);\n        const movieData = await movieDataApiResult.json();\n        oneMovie.movieData = movieData;\n      }\n\n      setApiResults(data.results);\n    });\n  }\n\n  const isLoading = searchTerm !== '' && apiResults === null;\n  return {\n    isLoading,\n    movies: apiResults === undefined || apiResults === null ? [] : apiResults\n  };\n};\n\n_s(useMovies, \"n3OrBAfJBTalV7tDKHbhA1SNjbc=\");","map":{"version":3,"sources":["/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/hooks/useMovies.js"],"names":["useEffect","useState","apiKey","process","env","REACT_APP_API_KEY","fetchMovieData","movie","res","fetch","id","data","json","console","log","useMovies","searchTerm","lastSearchTermApiCalled","setLastSearchTermApiCalled","apiResults","setApiResults","then","results","i","length","oneMovie","movieDataApiResult","movieData","isLoading","movies","undefined"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA3B;;AAEA,MAAMC,cAAc,GAAG,MAAMC,KAAN,IAAe;AACpC;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,sCAAqCF,KAAK,CAACG,EAAG,YAAWR,MAAO,iBAD5C,CAAvB;AAGA,QAAMS,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,IAArB;AACA,SAAOA,IAAP;AACD,CARD;;AAUA,OAAO,MAAMI,SAAS,GAAGC,UAAU,IAAI;AAAA;;AACrC,QAAM,CAACC,uBAAD,EAA0BC,0BAA1B,IAAwDjB,QAAQ,CAAC,IAAD,CAAtE;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,IAAD,CAA5C;;AAEA,MAAIe,UAAU,KAAK,EAAf,IAAqBA,UAAU,KAAKC,uBAAxC,EAAiE;AAC/DG,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAF,IAAAA,0BAA0B,CAACF,UAAD,CAA1B;AAEAP,IAAAA,KAAK,CACF,qDAAoDP,MAAO,UAASc,UAAW,sBAD7E,CAAL,CAGGK,IAHH,CAGQb,GAAG,IAAI;AACX,aAAOA,GAAG,CAACI,IAAJ,EAAP;AACD,KALH,EAMGS,IANH,CAMQV,IAAI,IAAI;AACZE,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,IAAnC,EADY,CAEZ;;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CH,IAAI,CAACW,OAAlD;AACA,aAAOX,IAAI,CAACW,OAAZ;AACD,KAXH,EAYGD,IAZH,CAYQ,MAAMV,IAAN,IAAc;AAClB,WAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,IAAI,CAACa,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,cAAME,QAAQ,GAAGd,IAAI,CAACY,CAAD,CAArB;AACA,cAAMG,kBAAkB,GAAG,MAAMjB,KAAK,CACnC,sCAAqCgB,QAAQ,CAACf,EAAG,YAAWR,MAAO,iBADhC,CAAtC;AAGA,cAAMyB,SAAS,GAAG,MAAMD,kBAAkB,CAACd,IAAnB,EAAxB;AACAa,QAAAA,QAAQ,CAACE,SAAT,GAAqBA,SAArB;AACD;;AACDP,MAAAA,aAAa,CAACT,IAAI,CAACW,OAAN,CAAb;AACD,KAtBH;AAuBD;;AAED,QAAMM,SAAS,GAAGZ,UAAU,KAAK,EAAf,IAAqBG,UAAU,KAAK,IAAtD;AAEA,SAAO;AACLS,IAAAA,SADK;AAELC,IAAAA,MAAM,EAAEV,UAAU,KAAKW,SAAf,IAA4BX,UAAU,KAAK,IAA3C,GAAkD,EAAlD,GAAuDA;AAF1D,GAAP;AAID,CAvCM;;GAAMJ,S","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nconst fetchMovieData = async movie => {\n  // console.log('in fetch movie data');\n  const res = await fetch(\n    `https://api.themoviedb.org/3/movie/${movie.id}?api_key=${apiKey}&language=en-US`\n  );\n  const data = await res.json();\n  console.log('data:', data);\n  return data;\n};\n\nexport const useMovies = searchTerm => {\n  const [lastSearchTermApiCalled, setLastSearchTermApiCalled] = useState(null);\n  const [apiResults, setApiResults] = useState(null);\n\n  if (searchTerm !== '' && searchTerm !== lastSearchTermApiCalled) {\n    setApiResults(null);\n    setLastSearchTermApiCalled(searchTerm);\n\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${searchTerm}&include_adult=false`\n    )\n      .then(res => {\n        return res.json();\n      })\n      .then(data => {\n        console.log('Home fetch output: ', data);\n        // data.results.()\n        console.log('Got movies list from API :>> ', data.results);\n        return data.results;\n      })\n      .then(async data => {\n        for (let i = 0; i < data.length; i++) {\n          const oneMovie = data[i];\n          const movieDataApiResult = await fetch(\n            `https://api.themoviedb.org/3/movie/${oneMovie.id}?api_key=${apiKey}&language=en-US`\n          );\n          const movieData = await movieDataApiResult.json();\n          oneMovie.movieData = movieData;\n        }\n        setApiResults(data.results);\n      });\n  }\n\n  const isLoading = searchTerm !== '' && apiResults === null;\n\n  return {\n    isLoading,\n    movies: apiResults === undefined || apiResults === null ? [] : apiResults\n  };\n};\n"]},"metadata":{},"sourceType":"module"}