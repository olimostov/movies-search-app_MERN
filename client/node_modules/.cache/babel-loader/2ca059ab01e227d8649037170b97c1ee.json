{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\n\nfunction useFetch(url, options) {\n  _s();\n\n  const [status, setStatus] = useState({\n    loading: false,\n    error: undefined,\n    data: undefined\n  });\n\n  function fetchNow(url, options) {\n    setStatus({\n      loading: true\n    });\n    fetch(url, options).then(res => {\n      if (!res.ok) {\n        throw Error('could not fetch the data for that resource');\n      }\n\n      return res.json();\n    }).then(res => {\n      setStatus({\n        loading: false,\n        data: res.data\n      });\n    }).catch(error => {\n      setStatus({\n        loading: false,\n        error\n      });\n    });\n  }\n\n  useEffect(() => {\n    if (url) {\n      fetchNow(url, options);\n    }\n  }, []);\n  return { ...status,\n    fetchNow\n  };\n}\n\n_s(useFetch, \"FSLrx8g8/X53zRLJ45L/CYAp7A8=\");","map":{"version":3,"sources":["/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/hooks/useFetch.js"],"names":["useEffect","useState","useFetch","url","options","status","setStatus","loading","error","undefined","data","fetchNow","fetch","then","res","ok","Error","json","catch"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,OAAvB,EAAgC;AAAA;;AAC9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;AACnCM,IAAAA,OAAO,EAAE,KAD0B;AAEnCC,IAAAA,KAAK,EAAEC,SAF4B;AAGnCC,IAAAA,IAAI,EAAED;AAH6B,GAAD,CAApC;;AAMA,WAASE,QAAT,CAAkBR,GAAlB,EAAuBC,OAAvB,EAAgC;AAC9BE,IAAAA,SAAS,CAAC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAT;AAEAK,IAAAA,KAAK,CAACT,GAAD,EAAMC,OAAN,CAAL,CACGS,IADH,CACQC,GAAG,IAAI;AACX,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,cAAMC,KAAK,CAAC,4CAAD,CAAX;AACD;;AACD,aAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,KANH,EAOGJ,IAPH,CAOQC,GAAG,IAAI;AACXR,MAAAA,SAAS,CAAC;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBG,QAAAA,IAAI,EAAEI,GAAG,CAACJ;AAA5B,OAAD,CAAT;AACD,KATH,EAUGQ,KAVH,CAUSV,KAAK,IAAI;AACdF,MAAAA,SAAS,CAAC;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA;AAAlB,OAAD,CAAT;AACD,KAZH;AAaD;;AAEDR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,GAAJ,EAAS;AACPQ,MAAAA,QAAQ,CAACR,GAAD,EAAMC,OAAN,CAAR;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAMA,SAAO,EAAE,GAAGC,MAAL;AAAaM,IAAAA;AAAb,GAAP;AACD;;GAhCQT,Q","sourcesContent":["import { useEffect, useState } from 'react';\n\nfunction useFetch(url, options) {\n  const [status, setStatus] = useState({\n    loading: false,\n    error: undefined,\n    data: undefined\n  });\n\n  function fetchNow(url, options) {\n    setStatus({ loading: true });\n\n    fetch(url, options)\n      .then(res => {\n        if (!res.ok) {\n          throw Error('could not fetch the data for that resource');\n        }\n        return res.json();\n      })\n      .then(res => {\n        setStatus({ loading: false, data: res.data });\n      })\n      .catch(error => {\n        setStatus({ loading: false, error });\n      });\n  }\n\n  useEffect(() => {\n    if (url) {\n      fetchNow(url, options);\n    }\n  }, []);\n\n  return { ...status, fetchNow };\n}\n"]},"metadata":{},"sourceType":"module"}