{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nconst apiEndPoint = process.env.REACT_APP_IMDB_TOP250_END_POINT;\nexport const useTop250 = () => {\n  _s();\n\n  const [top250, setTop250] = useState(null);\n  fetch(apiEndPoint).then(res => {\n    return res.json();\n  }).then(data => {\n    console.log('IMDB Top250 data :>> ', data);\n    return data.items;\n  }).then(data => {\n    new Promise(async resolve => {\n      for (let i = 0; i < data.length; i++) {\n        const oneMovie = data[i];\n        const movieDataApiResult = await fetch(`https://api.themoviedb.org/3/movie/${oneMovie.id}?api_key=${apiKey}&language=en-US`);\n        const movieData = await movieDataApiResult.json();\n        oneMovie.movieData = movieData;\n      }\n\n      resolve(data);\n    });\n  }).then(data => {\n    setTop250(data);\n  });\n  const isLoading = top250 === null;\n  return {\n    isLoading,\n    movies: top250 === undefined || top250 === null ? [] : top250\n  };\n};\n\n_s(useTop250, \"PZF2r8Sm6QQsai6aGi/e8+wDWBU=\");","map":{"version":3,"sources":["/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/hooks/useTop250.js"],"names":["useState","useEffect","apiEndPoint","process","env","REACT_APP_IMDB_TOP250_END_POINT","useTop250","top250","setTop250","fetch","then","res","json","data","console","log","items","Promise","resolve","i","length","oneMovie","movieDataApiResult","id","apiKey","movieData","isLoading","movies","undefined"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYC,+BAAhC;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,IAAD,CAApC;AAEAS,EAAAA,KAAK,CAACP,WAAD,CAAL,CACGQ,IADH,CACQC,GAAG,IAAI;AACX,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,GAHH,EAIGF,IAJH,CAIQG,IAAI,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,IAArC;AACA,WAAOA,IAAI,CAACG,KAAZ;AACD,GAPH,EAQGN,IARH,CAQQG,IAAI,IAAI;AACZ,QAAII,OAAJ,CAAY,MAAMC,OAAN,IAAiB;AAC3B,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAAI,CAACO,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,cAAME,QAAQ,GAAGR,IAAI,CAACM,CAAD,CAArB;AACA,cAAMG,kBAAkB,GAAG,MAAMb,KAAK,CACnC,sCAAqCY,QAAQ,CAACE,EAAG,YAAWC,MAAO,iBADhC,CAAtC;AAGA,cAAMC,SAAS,GAAG,MAAMH,kBAAkB,CAACV,IAAnB,EAAxB;AACAS,QAAAA,QAAQ,CAACI,SAAT,GAAqBA,SAArB;AACD;;AACDP,MAAAA,OAAO,CAACL,IAAD,CAAP;AACD,KAVD;AAWD,GApBH,EAqBGH,IArBH,CAqBQG,IAAI,IAAI;AACZL,IAAAA,SAAS,CAACK,IAAD,CAAT;AACD,GAvBH;AAyBA,QAAMa,SAAS,GAAGnB,MAAM,KAAK,IAA7B;AACA,SAAO;AACLmB,IAAAA,SADK;AAELC,IAAAA,MAAM,EAAEpB,MAAM,KAAKqB,SAAX,IAAwBrB,MAAM,KAAK,IAAnC,GAA0C,EAA1C,GAA+CA;AAFlD,GAAP;AAID,CAjCM;;GAAMD,S","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst apiEndPoint = process.env.REACT_APP_IMDB_TOP250_END_POINT;\nexport const useTop250 = () => {\n  const [top250, setTop250] = useState(null);\n\n  fetch(apiEndPoint)\n    .then(res => {\n      return res.json();\n    })\n    .then(data => {\n      console.log('IMDB Top250 data :>> ', data);\n      return data.items;\n    })\n    .then(data => {\n      new Promise(async resolve => {\n        for (let i = 0; i < data.length; i++) {\n          const oneMovie = data[i];\n          const movieDataApiResult = await fetch(\n            `https://api.themoviedb.org/3/movie/${oneMovie.id}?api_key=${apiKey}&language=en-US`\n          );\n          const movieData = await movieDataApiResult.json();\n          oneMovie.movieData = movieData;\n        }\n        resolve(data);\n      });\n    })\n    .then(data => {\n      setTop250(data);\n    });\n\n  const isLoading = top250 === null;\n  return {\n    isLoading,\n    movies: top250 === undefined || top250 === null ? [] : top250\n  };\n};\n"]},"metadata":{},"sourceType":"module"}