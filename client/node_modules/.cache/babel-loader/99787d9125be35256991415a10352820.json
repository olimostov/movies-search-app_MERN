{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\n\nconst useFetch = (url, options) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [status, setStatus] = useState({\n    loading: false,\n    error: undefined,\n    data: undefined\n  });\n\n  function useFetch(url, options) {\n    _s();\n\n    const [status, setStatus] = useState({\n      loading: false,\n      error: undefined,\n      data: undefined\n    });\n\n    function fetchNow(url, options) {\n      setStatus({\n        loading: true\n      });\n      fetch(url, options).then(res => res.json()).then(res => {\n        setStatus({\n          loading: false,\n          data: res.data\n        });\n      }).catch(error => {\n        setStatus({\n          loading: false,\n          error\n        });\n      });\n    }\n\n    useEffect(() => {\n      if (url) {\n        fetchNow(url, options);\n      }\n    }, []);\n    return { ...status,\n      fetchNow\n    };\n  }\n\n  _s(useFetch, \"FWEzlIC2zbISvwb0f4spM0Fd160=\");\n};\n\n_s2(useFetch, \"dGICmQTnKtu1jaso7ym5/88W1AM=\");","map":{"version":3,"sources":["/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/hooks/useFetch.js"],"names":["useEffect","useState","useFetch","url","options","status","setStatus","loading","error","undefined","data","fetchNow","fetch","then","res","json","catch"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAAA;;AAAA;;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;AACnCM,IAAAA,OAAO,EAAE,KAD0B;AAEnCC,IAAAA,KAAK,EAAEC,SAF4B;AAGnCC,IAAAA,IAAI,EAAED;AAH6B,GAAD,CAApC;;AAMA,WAASP,QAAT,CAAkBC,GAAlB,EAAuBC,OAAvB,EAAgC;AAAA;;AAC9B,UAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;AACnCM,MAAAA,OAAO,EAAE,KAD0B;AAEnCC,MAAAA,KAAK,EAAEC,SAF4B;AAGnCC,MAAAA,IAAI,EAAED;AAH6B,KAAD,CAApC;;AAMA,aAASE,QAAT,CAAkBR,GAAlB,EAAuBC,OAAvB,EAAgC;AAC9BE,MAAAA,SAAS,CAAC;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAT;AAEAK,MAAAA,KAAK,CAACT,GAAD,EAAMC,OAAN,CAAL,CACGS,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACXR,QAAAA,SAAS,CAAC;AAAEC,UAAAA,OAAO,EAAE,KAAX;AAAkBG,UAAAA,IAAI,EAAEI,GAAG,CAACJ;AAA5B,SAAD,CAAT;AACD,OAJH,EAKGM,KALH,CAKSR,KAAK,IAAI;AACdF,QAAAA,SAAS,CAAC;AAAEC,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA;AAAlB,SAAD,CAAT;AACD,OAPH;AAQD;;AAEDR,IAAAA,SAAS,CAAC,MAAM;AACd,UAAIG,GAAJ,EAAS;AACPQ,QAAAA,QAAQ,CAACR,GAAD,EAAMC,OAAN,CAAR;AACD;AACF,KAJQ,EAIN,EAJM,CAAT;AAMA,WAAO,EAAE,GAAGC,MAAL;AAAaM,MAAAA;AAAb,KAAP;AACD;;AAlCgC,KAOxBT,QAPwB;AAmClC,CAnCD;;IAAMA,Q","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useFetch = (url, options) => {\n  const [status, setStatus] = useState({\n    loading: false,\n    error: undefined,\n    data: undefined\n  });\n\n  function useFetch(url, options) {\n    const [status, setStatus] = useState({\n      loading: false,\n      error: undefined,\n      data: undefined\n    });\n\n    function fetchNow(url, options) {\n      setStatus({ loading: true });\n\n      fetch(url, options)\n        .then(res => res.json())\n        .then(res => {\n          setStatus({ loading: false, data: res.data });\n        })\n        .catch(error => {\n          setStatus({ loading: false, error });\n        });\n    }\n\n    useEffect(() => {\n      if (url) {\n        fetchNow(url, options);\n      }\n    }, []);\n\n    return { ...status, fetchNow };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}