{"ast":null,"code":"var _jsxFileName = \"/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/MoviesContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport movie from '../../../server/models/movie';\nimport MovieCard from './MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nconst MoviesContainer = ({\n  moviesDatamovies\n}) => {\n  _s();\n\n  const [moviesData, setMoviesData] = useState([]);\n  useEffect(() => {\n    const getMoviesData = () => {\n      const moviesData = movies.map(movie => {\n        return fetchMovieData(movie);\n      });\n      setMoviesData(moviesData);\n    };\n\n    getMoviesData();\n  }, []);\n\n  const fetchMovieData = async movie => {\n    const res = await fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=${apiKey}&language=en-US`);\n    const data = await res.json();\n    console.log('data :>> ', data);\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container movies\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: moviesData.map(movie => {\n        console.log('movie :>> ', movie);\n        return /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: movie\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MoviesContainer, \"XFQZPYOtKr46T1Urol/nfUf2K6Q=\");\n\n_c = MoviesContainer;\nexport default MoviesContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesContainer\");","map":{"version":3,"sources":["/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/MoviesContainer.js"],"names":["useEffect","useState","movie","MovieCard","apiKey","process","env","REACT_APP_API_KEY","MoviesContainer","moviesDatamovies","moviesData","setMoviesData","getMoviesData","movies","map","fetchMovieData","res","fetch","id","data","json","console","log"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA3B;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA0B;AAAA;;AAChD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,aAAa,GAAG,MAAM;AAC1B,YAAMF,UAAU,GAAGG,MAAM,CAACC,GAAP,CAAWZ,KAAK,IAAI;AACrC,eAAOa,cAAc,CAACb,KAAD,CAArB;AACD,OAFkB,CAAnB;AAGAS,MAAAA,aAAa,CAACD,UAAD,CAAb;AACD,KALD;;AAMAE,IAAAA,aAAa;AACd,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMG,cAAc,GAAG,MAAMb,KAAN,IAAe;AACpC,UAAMc,GAAG,GAAG,MAAMC,KAAK,CACpB,sCAAqCf,KAAK,CAACgB,EAAG,YAAWd,MAAO,iBAD5C,CAAvB;AAGA,UAAMe,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAnB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,IAAzB;AACA,WAAOA,IAAP;AACD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACGT,UAAU,CAACI,GAAX,CAAeZ,KAAK,IAAI;AACvBmB,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BpB,KAA1B;AACA,4BAAO,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEA;AAAlB,WAA8BA,KAAK,CAACgB,EAApC;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAHA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAjCD;;GAAMV,e;;KAAAA,e;AAmCN,eAAeA,eAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport movie from '../../../server/models/movie';\nimport MovieCard from './MovieCard';\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nconst MoviesContainer = ({ moviesDatamovies }) => {\n  const [moviesData, setMoviesData] = useState([]);\n\n  useEffect(() => {\n    const getMoviesData = () => {\n      const moviesData = movies.map(movie => {\n        return fetchMovieData(movie);\n      });\n      setMoviesData(moviesData);\n    };\n    getMoviesData();\n  }, []);\n\n  const fetchMovieData = async movie => {\n    const res = await fetch(\n      `https://api.themoviedb.org/3/movie/${movie.id}?api_key=${apiKey}&language=en-US`\n    );\n    const data = await res.json();\n\n    console.log('data :>> ', data);\n    return data;\n  };\n\n  return (\n    <div className='container movies'>\n      <div className='row'>\n        {moviesData.map(movie => {\n          console.log('movie :>> ', movie);\n          return <MovieCard movie={movie} key={movie.id} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MoviesContainer;\n"]},"metadata":{},"sourceType":"module"}