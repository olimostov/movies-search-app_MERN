[{"/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/index.js":"1","/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/reportWebVitals.js":"2","/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/App.js":"3","/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/Navbar.js":"4","/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/Home.js":"5","/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/Pagination.js":"6","/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/SearchBox.js":"7","/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/Top250.js":"8","/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/MovieCard.js":"9","/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/MoviesContainer.js":"10","/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/Bookmarked.js":"11","/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/hooks/useMovies.js":"12","/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/hooks/useFetch.js":"13"},{"size":511,"mtime":1613813219731,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1613812951531,"results":"16","hashOfConfig":"15"},{"size":665,"mtime":1614151529806,"results":"17","hashOfConfig":"15"},{"size":690,"mtime":1614151553862,"results":"18","hashOfConfig":"15"},{"size":1802,"mtime":1614937587977,"results":"19","hashOfConfig":"15"},{"size":835,"mtime":1613816971337,"results":"20","hashOfConfig":"15"},{"size":1245,"mtime":1614935148471,"results":"21","hashOfConfig":"15"},{"size":889,"mtime":1614594348076,"results":"22","hashOfConfig":"15"},{"size":2234,"mtime":1614849113779,"results":"23","hashOfConfig":"15"},{"size":445,"mtime":1614849446156,"results":"24","hashOfConfig":"15"},{"size":2769,"mtime":1614408286192,"results":"25","hashOfConfig":"15"},{"size":2164,"mtime":1614849932088,"results":"26","hashOfConfig":"15"},{"size":630,"mtime":1614852694685,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ep2zkf",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"30"},"/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/index.js",[],["62","63"],"/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/reportWebVitals.js",[],"/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/App.js",[],"/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/Navbar.js",[],"/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/Home.js",["64","65","66"],"/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/Pagination.js",[],"/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/SearchBox.js",["67"],"import { useState } from 'react';\n\nconst SearchBox = ({ onSearchSubmit, onSearchInputChange, searchTerm }) => {\n  // const [searchInput, setSearchInput] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    // if (!searchInput) {\n    //   alert('Please provide a movie title');\n    //   return;\n    // }\n\n    if (onSearchSubmit) {\n      onSearchSubmit();\n    }\n\n    // setSearchInput('');\n  };\n  return (\n    <form className='container' onSubmit={onSubmit}>\n      <div className='row'>\n        <div className='col s12'>\n          <div className='row'>\n            <div className='input-field col s12'>\n              <i className='fab fa-searchengin prefix'></i>\n              <input\n                autocomplete='off'\n                type='text'\n                id='autocomplete-input'\n                className='autocomplete'\n                value={searchTerm}\n                onChange={e => {\n                  onSearchInputChange(e.target.value);\n                  // setSearchInput(e.target.value);\n                }}\n              />\n              <label htmlFor='autocomplete-input'>Search for a movie</label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default SearchBox;\n","/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/Top250.js",["68","69"],"import { useState, useEffect } from 'react';\nimport MovieCard from './MovieCard';\nimport MoviesContainer from './MoviesContainer';\n\nconst Top250 = () => {\n  const [top250, setTop250] = useState([]);\n  const apiEndPoint = process.env.REACT_APP_TOP250_END_POINT;\n  console.log('apiEndPoint:', apiEndPoint);\n  const apiKey = process.env.REACT_APP_API_KEY;\n\n  useEffect(() => {\n    const getTop = async () => {\n      const top250Movies = await fetchTop250();\n      setTop250(top250Movies);\n    };\n    getTop();\n    console.log('top250 :>> ', top250);\n  }, []);\n\n  // Fetch Top250 movies\n  const fetchTop250 = async () => {\n    const res = await fetch(`${apiEndPoint}api_key=${apiKey}&language=en-US`);\n    const data = await res.json();\n    console.log('data.results :>> ', data.results);\n    return data.results;\n  };\n\n  return <MoviesContainer movies={top250} />;\n};\n\nexport default Top250;\n","/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/MovieCard.js",["70","71","72","73","74","75"],"import { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport M from 'materialize-css';\n\nimport film from '../assets/film.svg';\n\nconst MovieCard = ({ movie }) => {\n  M.AutoInit();\n  M.Modal.init();\n\n  const genresList = arr => {\n    const genres = arr.map(genre => {\n      return genre.name.join(', ');\n    });\n    console.log('genres :>> ', genres);\n    return genres;\n  };\n  const bookmarkMovie = e => {\n    e.preventDefault();\n    const bookmarkedMovie = fetch('http://localhost:9000/api/v1/movies/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(movie, { _id: 'movie.id' })\n    }).then(() => {\n      console.log('movie has added');\n\n      console.log('movie: ', bookmarkedMovie);\n    });\n  };\n  return (\n    <div className='col s12 m4 l3'>\n      <div className='card blue-grey darken-2'>\n        <div className='card-image waves-block waves-light'>\n          {movie.poster_path ? (\n            <img\n              className='activator'\n              src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2${movie.poster_path}`}\n            />\n          ) : (\n            <img src={film} className='activator' />\n          )}\n        </div>\n        <div className='card-reveal'>\n          <span className='card-title'>\n            <i className='fas fa-chevron-down right'></i>\n            {movie.original_title}\n          </span>\n\n          <p>\n            Ratings: {movie.vote_average} <i className='fas fa-star '></i>\n          </p>\n          <p>\n            Genre:{' '}\n            {movie.genres.map(genreObj => (\n              <span key={genreObj.id}>{genreObj.name}</span>\n            ))}\n          </p>\n          {/* <p>Genre: Genre</p> */}\n          <p>Year: {movie.release_date}</p>\n          <p>\n            <a\n              href={`https://www.themoviedb.org/movie/${movie.id}`}\n              target='_blank'\n            >\n              Read More\n            </a>\n          </p>\n          <div className='card-action'>\n            <button className='btn movie-btn' onClick={bookmarkMovie}>\n              Bookmark\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/MoviesContainer.js",["76"],"import MovieCard from './MovieCard';\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nconst MoviesContainer = ({ movies }) => {\n  return (\n    <div className='container movies'>\n      <div className='row'>\n        {movies.map(oneMovie => {\n          // console.log('oneMovie :>> ', oneMovie);\n          return <MovieCard movie={oneMovie.movieData} key={oneMovie.id} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MoviesContainer;\n","/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/components/Bookmarked.js",["77","78","79","80"],"import { useEffect, useState } from 'react';\nimport film from '../assets/film.svg';\nimport M from 'materialize-css';\n\nconst Bookmarked = () => {\n  M.AutoInit();\n  const [bookmarkedMovies, setBookmarkedMovies] = useState([]);\n\n  useEffect(() => {\n    getMovies();\n    console.log('bookmarkedMovies :>> ', bookmarkedMovies);\n  }, []);\n\n  const getMovies = async () => {\n    const moviesFromServer = await fetchMovies();\n    console.log('moviesFromServer:', moviesFromServer);\n    setBookmarkedMovies(moviesFromServer);\n  };\n  // Fetch movies from db\n  const fetchMovies = async () => {\n    const res = await fetch('http://localhost:9000/api/v1/movies/');\n    const data = await res.json();\n    console.log('data :>> ', data);\n    return data.data;\n  };\n\n  // Delete movie from list\n  const deleteFromDB = async _id => {\n    await fetch(`http://localhost:9000/api/v1/movies/${_id}`, {\n      method: 'DELETE'\n    });\n\n    setBookmarkedMovies(bookmarkedMovies.filter(movie => movie._id !== _id));\n  };\n\n  return (\n    <div className='container'>\n      <div className='header'>\n        <h2>Bookmarked</h2>\n      </div>\n      <ul class='collapsible popout'>\n        {bookmarkedMovies.map((movie, index) => {\n          return (\n            <li key={index}>\n              <div className='collapsible-header blue-grey darken-2'>\n                <div>\n                  <i className='fas fa-film'> </i>\n                  {index + 1} {movie.original_title}\n                </div>{' '}\n                <div>\n                  Ratings: {movie.vote_average} <i className='fas fa-star '></i>\n                </div>\n              </div>\n              <div className='collapsible-body row'>\n                {\n                  <div className='bookmarked-image col s2'>\n                    {movie.poster_path ? (\n                      <img\n                        className='activator'\n                        src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2${movie.poster_path}`}\n                      />\n                    ) : (\n                      <img src={film} className='' />\n                    )}\n                  </div>\n                }{' '}\n                <span className='col s10'>{movie.overview}</span>\n                <a\n                  className='col s10'\n                  href={`https://www.themoviedb.org/movie/${movie.id}`}\n                  target='_blank'\n                >\n                  Read More\n                </a>\n                <button\n                  className='btn movie-btn delete-btn col'\n                  onClick={deleteFromDB}\n                >\n                  Delete from List\n                </button>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Bookmarked;\n","/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/hooks/useMovies.js",["81","82","83"],"import { useEffect, useState } from 'react';\nimport { useFetch } from './useFetch';\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nconst fetchMovieData = async movie => {\n  // console.log('in fetch movie data');\n  const res = await fetch(\n    `https://api.themoviedb.org/3/movie/${movie.id}?api_key=${apiKey}&language=en-US`\n  );\n  const data = await res.json();\n  console.log('data:', data);\n  return data;\n};\n\nexport const useMovies = searchTerm => {\n  const [lastSearchTermApiCalled, setLastSearchTermApiCalled] = useState(null);\n  const [apiResults, setApiResults] = useState(null);\n\n  // const { loading, error, data, fetchNow } = useFetch();\n\n  if (searchTerm !== '' && searchTerm !== lastSearchTermApiCalled) {\n    setApiResults(null);\n    setLastSearchTermApiCalled(searchTerm);\n\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${searchTerm}&include_adult=false`\n    )\n      .then(res => {\n        return res.json();\n      })\n      .then(data => {\n        console.log('Got movies list from API :>> ', data.results);\n        return data.results;\n      })\n      .then(data => {\n        return new Promise(async resolve => {\n          console.log('Starting to load each movie in a loop...');\n          for (let i = 0; i < data.length; i++) {\n            const oneMovie = data[i];\n            // console.log(`Loading movie ${oneMovie.id}...`);\n            const movieDataApiResult = await fetch(\n              `https://api.themoviedb.org/3/movie/${oneMovie.id}?api_key=${apiKey}&language=en-US`\n            );\n            const movieData = await movieDataApiResult.json();\n            // console.log(\n            //   `JSON-decoded the API response for ${oneMovie.id}`,\n            //   movieData\n            // );\n            oneMovie.movieData = movieData;\n          }\n          resolve(data);\n        });\n      })\n      .then(data => {\n        console.log('REACHED THE END OF ALL FETCHING!!!', data);\n        setApiResults(data);\n      });\n  }\n\n  const isLoading = searchTerm !== '' && apiResults === null;\n\n  return {\n    isLoading,\n    movies: apiResults === undefined || apiResults === null ? [] : apiResults\n  };\n};\n","/Users/olimostovyi/Documents/WebDev/projects/movie-search-app/client/src/hooks/useFetch.js",["84"],"import { useEffect, useState } from 'react';\n\nfunction useFetch(url, options) {\n  const [status, setStatus] = useState({\n    loading: false,\n    error: undefined,\n    data: undefined\n  });\n\n  function fetchNow(url, options) {\n    setStatus({ loading: true });\n\n    fetch(url, options)\n      .then(res => res.json())\n      .then(res => {\n        setStatus({ loading: false, data: res.data });\n      })\n      .catch(error => {\n        setStatus({ loading: false, error });\n      });\n  }\n\n  useEffect(() => {\n    if (url) {\n      fetchNow(url, options);\n    }\n  }, []);\n\n  return { ...status, fetchNow };\n}\n\nexport default useFetch;\n",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":10,"nodeType":"91","messageId":"92","endLine":1,"endColumn":19},{"ruleId":"89","severity":1,"message":"93","line":7,"column":8,"nodeType":"91","messageId":"92","endLine":7,"endColumn":9},{"ruleId":"89","severity":1,"message":"94","line":13,"column":7,"nodeType":"91","messageId":"92","endLine":13,"endColumn":13},{"ruleId":"89","severity":1,"message":"95","line":1,"column":10,"nodeType":"91","messageId":"92","endLine":1,"endColumn":18},{"ruleId":"89","severity":1,"message":"96","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":17},{"ruleId":"97","severity":1,"message":"98","line":18,"column":6,"nodeType":"99","endLine":18,"endColumn":8,"suggestions":"100"},{"ruleId":"89","severity":1,"message":"95","line":1,"column":10,"nodeType":"91","messageId":"92","endLine":1,"endColumn":18},{"ruleId":"89","severity":1,"message":"101","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":14},{"ruleId":"89","severity":1,"message":"102","line":12,"column":9,"nodeType":"91","messageId":"92","endLine":12,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":38,"column":13,"nodeType":"105","endLine":41,"endColumn":15},{"ruleId":"103","severity":1,"message":"104","line":43,"column":13,"nodeType":"105","endLine":43,"endColumn":53},{"ruleId":"106","severity":1,"message":"107","line":64,"column":13,"nodeType":"105","endLine":67,"endColumn":14},{"ruleId":"89","severity":1,"message":"94","line":2,"column":7,"nodeType":"91","messageId":"92","endLine":2,"endColumn":13},{"ruleId":"97","severity":1,"message":"108","line":12,"column":6,"nodeType":"99","endLine":12,"endColumn":8,"suggestions":"109"},{"ruleId":"103","severity":1,"message":"104","line":58,"column":23,"nodeType":"105","endLine":61,"endColumn":25},{"ruleId":"103","severity":1,"message":"104","line":63,"column":23,"nodeType":"105","endLine":63,"endColumn":54},{"ruleId":"106","severity":1,"message":"107","line":68,"column":17,"nodeType":"105","endLine":72,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":1,"column":10,"nodeType":"91","messageId":"92","endLine":1,"endColumn":19},{"ruleId":"89","severity":1,"message":"110","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":18},{"ruleId":"89","severity":1,"message":"111","line":6,"column":7,"nodeType":"91","messageId":"92","endLine":6,"endColumn":21},{"ruleId":"97","severity":1,"message":"112","line":27,"column":6,"nodeType":"99","endLine":27,"endColumn":8,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'M' is defined but never used.","'apiKey' is assigned a value but never used.","'useState' is defined but never used.","'MovieCard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchTop250' and 'top250'. Either include them or remove the dependency array.","ArrayExpression",["116"],"'Link' is defined but never used.","'genresList' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","React Hook useEffect has missing dependencies: 'bookmarkedMovies' and 'getMovies'. Either include them or remove the dependency array.",["117"],"'useFetch' is defined but never used.","'fetchMovieData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'options' and 'url'. Either include them or remove the dependency array.",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [fetchTop250, top250]",{"range":"125","text":"126"},"Update the dependencies array to be: [bookmarkedMovies, getMovies]",{"range":"127","text":"128"},"Update the dependencies array to be: [options, url]",{"range":"129","text":"130"},[552,554],"[fetchTop250, top250]",[328,330],"[bookmarkedMovies, getMovies]",[562,564],"[options, url]"]